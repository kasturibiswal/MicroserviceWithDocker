package com.currency.conversion.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.currency.conversion.bean.ConversionFactorResponse;

@Service
public class CurrencyConversionDelegateNew {
	
	private static RestTemplate restTemplate = new RestTemplate();
	//private static final String baseURL = "http://localhost:8000/conversionfactor";
	@Value("${currency.baseurl}")  
	private String baseURL;
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	public Double convertCurrency(String fromCurrency, String toCurrency)
	{
		
		logger.debug("Executing getConversionFactor");
		try {
		ConversionFactorResponse conversionFactorResponse = restTemplate.getForObject(baseURL+"/"+fromCurrency+"/"+toCurrency, ConversionFactorResponse.class);
		logger.debug("conversionFactorResponsefrom service = "+conversionFactorResponse);
		
		return conversionFactorResponse.getConversionFactor();
		}
		catch(RuntimeException ex)
		{
			throw new RuntimeException("Currency Conversion service Not Available");
		}
		
	}
	
	public ConversionFactorResponse getConversionFactor(String fromCurrency, String toCurrency)
	{
		
		logger.debug("Executing getConversionFactor");
		try {
		ConversionFactorResponse conversionFactorResponse = restTemplate.getForObject(baseURL+"/"+fromCurrency+"/"+toCurrency, ConversionFactorResponse.class);
		logger.debug("conversionFactorResponsefrom service = "+conversionFactorResponse);
		return conversionFactorResponse;
		}
		catch(RuntimeException ex)
		{
			throw new RuntimeException("Currency Conversion service Not Available");
		}
		
	}
	
	

}
